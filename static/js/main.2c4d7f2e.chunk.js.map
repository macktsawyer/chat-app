{"version":3,"sources":["components/Button.js","components/Input.js","components/Message.js","components/Chatdisplay.js","components/App.js","reportWebVitals.js","index.js"],"names":["Button","onClick","children","className","Input","user","db","useState","newMessage","setNewMessage","uid","displayName","photoURL","onSubmit","e","preventDefault","collection","add","text","createdAt","firebase","firestore","FieldValue","serverTimestamp","value","onChange","target","type","name","Message","src","alt","seconds","formatRelative","Date","Chatdisplay","messages","setMessages","useEffect","orderBy","limit","onSnapshot","querySnapshot","data","docs","map","doc","id","message","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","App","currentUser","setUser","loading","setLoading","onAuthStateChanged","signInWithGoogle","a","provider","GoogleAuthProvider","useDeviceLanguage","signInWithPopup","console","error","signOut","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c4d7f2e.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Button.css'\r\n\r\nconst Button = ({ onClick = null, children = null}) => {\r\n    return (\r\n        <button className=\"button\" onClick={onClick}>{children}</button>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import React, { useState } from 'react';\r\nimport './Input.css';\r\nimport firebase from 'firebase/app'\r\n\r\nconst Input = ({user = null, db = null}) => {\r\n    const [newMessage, setNewMessage] = useState();\r\n    const { uid, displayName, photoURL } = user;\r\n\r\n    const handleOnChange = e => {\r\n        setNewMessage(e.target.value);\r\n    };\r\n\r\n    const handleOnSubmit = e => {\r\n        e.preventDefault();\r\n        \r\n        if (db) {\r\n            db.collection('messages').add({\r\n                text: newMessage,\r\n                createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n                uid,\r\n                displayName,\r\n                photoURL\r\n            })\r\n        }\r\n        setNewMessage('');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleOnSubmit}>\r\n            <input value={newMessage} onChange={handleOnChange} type=\"text\" name=\"chat\" className=\"InputBox\" />\r\n            <button type=\"submit\" name=\"submit\" className=\"SubmitButton\">Send</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input\r\n","import React from 'react'\r\nimport { formatRelative } from 'date-fns';\r\nimport './Message.css'\r\n\r\nconst Message = ({\r\n    createdAt = null,\r\n    text = '',\r\n    displayName = '',\r\n    photoURL = '',\r\n}) => {\r\n    return (\r\n        <div className=\"messageStyle\">\r\n            {photoURL ? (\r\n                <img src={photoURL} alt=\"Avatar\" className=\"avatarImage\" />\r\n            ) : null }\r\n            {displayName ? <p>{`${displayName} - `}</p> : null}\r\n            {createdAt?.seconds ? (\r\n                <span className=\"timeStamp\">\r\n                    {`${formatRelative(new Date(createdAt.seconds * 1000), new Date())} - `}\r\n                </span>\r\n            ) : null }\r\n            <p>{text}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Chatdisplay.css';\r\nimport Input from './Input';\r\nimport Message from './Message';\r\nimport firebase from 'firebase/app'\r\n\r\nconst Chatdisplay = ({ user = null, db = null }) => {\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (db) {\r\n            const unsubscribe = db.collection('messages')\r\n            .orderBy('createdAt')\r\n            .limit(100)\r\n            .onSnapshot(querySnapshot => {\r\n                const data = querySnapshot.docs.map(doc => ({\r\n                    ...doc.data(),\r\n                    id: doc.id,\r\n                }))\r\n                setMessages(data)\r\n            });\r\n            \r\n            return unsubscribe;\r\n        }\r\n    }, [db])\r\n\r\n    return (\r\n        <div className=\"Window\">\r\n            <div className=\"Container\">\r\n                <div className=\"ChatTitle\">\r\n                    <h1>Chat Room</h1>\r\n                </div>\r\n                <div className=\"ChatWindow\">\r\n                    <ul className=\"MessagesList\">\r\n                        {messages.map(message => (\r\n                            <li key={message.id}>\r\n                                < Message {...message} />\r\n                                </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"InputDiv\">\r\n                    {user ? (<Input user={user} db={db} className=\"input\" />) : (<div className=\"loggedOutText\">'Need to log in to chat'</div>)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chatdisplay\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Button from './Button'\nimport Chatdisplay from \"./Chatdisplay\";\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyBP0k0xnRbw8KvqhLarf-X4kfS2ieJs7eA\",\n  authDomain: \"chat-app-595f7.firebaseapp.com\",\n  projectId: \"chat-app-595f7\",\n  storageBucket: \"chat-app-595f7.appspot.com\",\n  messagingSenderId: \"382137305552\",\n  appId: \"1:382137305552:web:5a6aafd241e01c2f9091d5\",\n  measurementId: \"G-K0XKN6NYWL\"\n});\n\nconst auth = firebase.auth();\nconst db = firebase.firestore();\n\nfunction App() {\n  const [user, setUser] = useState(() => auth.currentUser);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        setUser(user)\n      } else {\n        setUser(null)\n      }\n      if (loading) {\n        setLoading(false);\n      }\n    });\n\n    return unsubscribe;\n  },[loading])\n\n  const signInWithGoogle = async () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.useDeviceLanguage();\n    try {\n      await auth.signInWithPopup(provider)\n    } catch (err) {\n      console.error(err)\n    }\n  };\n\n  const signOut = async () => {\n    try {\n      await firebase.auth().signOut();\n    } catch (error) {\n      console.log(error.message)\n    }\n  }\n\n  if (loading) return \"Loading...\"\n\n  return (\n    <div className=\"App\">\n      {user ? \n      (<Button className=\"signOutButton\" onClick={signOut}>Sign Out</Button>) : (\n        <Button onClick={signInWithGoogle}>Sign In With Google</Button>\n      )}\n      < Chatdisplay user={user} db={db} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}